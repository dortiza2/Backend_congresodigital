// <auto-generated />
using System;
using Congreso.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Congreso.Api.Migrations
{
    [DbContext(typeof(CongresoDbContext))]
    [Migration("20250916002102_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("Congreso.Api.Models.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("activity_type");

                    b.Property<int?>("Capacity")
                        .HasColumnType("INTEGER")
                        .HasColumnName("capacity");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("end_time");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_active");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("location");

                    b.Property<bool>("Published")
                        .HasColumnType("INTEGER")
                        .HasColumnName("published");

                    b.Property<bool>("RequiresEnrollment")
                        .HasColumnType("INTEGER")
                        .HasColumnName("requires_enrollment");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("start_time");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("title");

                    b.Property<string>("Type")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("type");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("Published", "StartTime")
                        .HasDatabaseName("idx_activities_published_start");

                    b.ToTable("activities");
                });

            modelBuilder.Entity("Congreso.Api.Models.Enrollment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("TEXT")
                        .HasColumnName("activity_id");

                    b.Property<bool>("Attended")
                        .HasColumnType("INTEGER")
                        .HasColumnName("attended");

                    b.Property<string>("QrCodeId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("qr_code_id");

                    b.Property<int?>("SeatNumber")
                        .HasColumnType("INTEGER")
                        .HasColumnName("seat_number");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("UserId", "ActivityId")
                        .IsUnique()
                        .HasDatabaseName("ux_enrollments_user_activity");

                    b.ToTable("enrollments");
                });

            modelBuilder.Entity("Congreso.Api.Models.FaqItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("answer");

                    b.Property<int>("Position")
                        .HasColumnType("INTEGER")
                        .HasColumnName("position");

                    b.Property<bool>("Published")
                        .HasColumnType("INTEGER")
                        .HasColumnName("published");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("question");

                    b.HasKey("Id");

                    b.ToTable("faq_items");
                });

            modelBuilder.Entity("Congreso.Api.Models.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Domain")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("domain");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("Type")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("organizations");
                });

            modelBuilder.Entity("Congreso.Api.Models.PodiumByYearView", b =>
                {
                    b.Property<Guid>("ActivityId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ActivityTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AwardDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUmg")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OrgName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Position")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Prize")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserFullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.ToTable("vw_podium_by_year");

                    b.ToView("vw_podium_by_year", (string)null);
                });

            modelBuilder.Entity("Congreso.Api.Models.PublicActivityView", b =>
                {
                    b.Property<int>("AvailableSpots")
                        .HasColumnType("INTEGER")
                        .HasColumnName("available_spots");

                    b.Property<int>("Capacity")
                        .HasColumnType("INTEGER")
                        .HasColumnName("capacity");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("end_time");

                    b.Property<int>("EnrolledCount")
                        .HasColumnType("INTEGER")
                        .HasColumnName("enrolled_count");

                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("location");

                    b.Property<bool>("Published")
                        .HasColumnType("INTEGER")
                        .HasColumnName("published");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("start_time");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("title");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("type");

                    b.ToTable("vw_public_activities");

                    b.ToView("vw_public_activities", (string)null);
                });

            modelBuilder.Entity("Congreso.Api.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("code");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("label");

                    b.HasKey("Id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("Congreso.Api.Models.Speaker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("TEXT")
                        .HasColumnName("avatar_url");

                    b.Property<string>("Bio")
                        .HasColumnType("TEXT")
                        .HasColumnName("bio");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("full_name");

                    b.Property<string>("Links")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("[]")
                        .HasColumnName("links");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("speakers");
                });

            modelBuilder.Entity("Congreso.Api.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<int?>("OrgId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("org_id");

                    b.HasKey("Id");

                    b.HasIndex("OrgId");

                    b.ToTable("teams");
                });

            modelBuilder.Entity("Congreso.Api.Models.TeamMember", b =>
                {
                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("team_id")
                        .HasColumnOrder(0);

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT")
                        .HasColumnName("user_id")
                        .HasColumnOrder(1);

                    b.HasKey("TeamId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("team_members");
                });

            modelBuilder.Entity("Congreso.Api.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasColumnName("avatar_url");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("full_name");

                    b.Property<bool>("IsUmg")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_umg");

                    b.Property<int?>("OrgId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("org_id");

                    b.Property<string>("OrgName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("org_name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("password_hash");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ux_users_email");

                    b.HasIndex("OrgId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Congreso.Api.Models.UserEnrollmentView", b =>
                {
                    b.Property<Guid>("ActivityId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ActivityTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsUmg")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OrgName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserFullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.ToTable("vw_user_enrollments");

                    b.ToView("vw_user_enrollments", (string)null);
                });

            modelBuilder.Entity("Congreso.Api.Models.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT")
                        .HasColumnName("user_id")
                        .HasColumnOrder(0);

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("role_id")
                        .HasColumnOrder(1);

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("user_roles");
                });

            modelBuilder.Entity("Congreso.Api.Models.Winner", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("TEXT")
                        .HasColumnName("activity_id");

                    b.Property<int>("EditionYear")
                        .HasColumnType("INTEGER")
                        .HasColumnName("edition_year");

                    b.Property<int>("Place")
                        .HasColumnType("INTEGER")
                        .HasColumnName("place");

                    b.Property<int?>("TeamId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("team_id");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("TEXT")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserId");

                    b.HasIndex("EditionYear", "ActivityId", "Place")
                        .IsUnique()
                        .HasDatabaseName("ux_winners_year_activity_place");

                    b.ToTable("winners");
                });

            modelBuilder.Entity("Congreso.Api.Models.Enrollment", b =>
                {
                    b.HasOne("Congreso.Api.Models.Activity", "Activity")
                        .WithMany("Enrollments")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Congreso.Api.Models.User", "User")
                        .WithMany("Enrollments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Congreso.Api.Models.Team", b =>
                {
                    b.HasOne("Congreso.Api.Models.Organization", "Organization")
                        .WithMany("Teams")
                        .HasForeignKey("OrgId");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Congreso.Api.Models.TeamMember", b =>
                {
                    b.HasOne("Congreso.Api.Models.Team", "Team")
                        .WithMany("TeamMembers")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Congreso.Api.Models.User", "User")
                        .WithMany("TeamMembers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Congreso.Api.Models.User", b =>
                {
                    b.HasOne("Congreso.Api.Models.Organization", "Organization")
                        .WithMany("Users")
                        .HasForeignKey("OrgId");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Congreso.Api.Models.UserRole", b =>
                {
                    b.HasOne("Congreso.Api.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Congreso.Api.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Congreso.Api.Models.Winner", b =>
                {
                    b.HasOne("Congreso.Api.Models.Activity", "Activity")
                        .WithMany("Winners")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Congreso.Api.Models.Team", "Team")
                        .WithMany("Winners")
                        .HasForeignKey("TeamId");

                    b.HasOne("Congreso.Api.Models.User", "User")
                        .WithMany("Winners")
                        .HasForeignKey("UserId");

                    b.Navigation("Activity");

                    b.Navigation("Team");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Congreso.Api.Models.Activity", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("Winners");
                });

            modelBuilder.Entity("Congreso.Api.Models.Organization", b =>
                {
                    b.Navigation("Teams");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Congreso.Api.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Congreso.Api.Models.Team", b =>
                {
                    b.Navigation("TeamMembers");

                    b.Navigation("Winners");
                });

            modelBuilder.Entity("Congreso.Api.Models.User", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("TeamMembers");

                    b.Navigation("UserRoles");

                    b.Navigation("Winners");
                });
#pragma warning restore 612, 618
        }
    }
}
